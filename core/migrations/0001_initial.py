# Generated by Django 4.2.10 on 2025-05-12 12:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de e-mail')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='nome de usuário')),
                ('user_type', models.CharField(choices=[('ADMIN', 'Administrador'), ('PROFESSOR', 'Professor'), ('STUDENT', 'Aluno')], default='STUDENT', max_length=10, verbose_name='tipo de usuário')),
                ('cpf', models.CharField(blank=True, help_text='CPF do aluno no formato XXX.XXX.XXX-XX', max_length=14, null=True, verbose_name='CPF')),
                ('address_line', models.CharField(blank=True, help_text='Rua, Avenida, etc.', max_length=255, null=True, verbose_name='endereço')),
                ('address_number', models.CharField(blank=True, help_text='Número do endereço', max_length=10, null=True, verbose_name='número')),
                ('neighborhood', models.CharField(blank=True, max_length=100, null=True, verbose_name='bairro')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='cidade')),
                ('state', models.CharField(blank=True, help_text='UF do estado (ex: SP, RJ)', max_length=2, null=True, verbose_name='estado')),
                ('zipcode', models.CharField(blank=True, help_text='CEP no formato XXXXX-XXX', max_length=9, null=True, verbose_name='CEP')),
                ('bio', models.TextField(blank=True, verbose_name='biografia')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='imagem de perfil')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='data de cadastro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
        ),
    ]
